{
  "name": "cjade",
  "version": "0.1.9",
  "author": {
    "name": "celer@scrypt.net djgiana@gmail.com"
  },
  "contributors": [],
  "main": "./lib/cjade.js",
  "keywords": [
    "jade",
    "jquery",
    "client side",
    "template"
  ],
  "dependencies": {
    "uglify-js": ">=2.2.5",
    "jade": "0.31.0"
  },
  "license": "MIT",
  "engine": {
    "node": ">=0.6"
  },
  "readme": "# cjade\n\nA simple request handler for express which compiles jade templates and\nmakes them avilable for client side use. \n\n# Requirements\n \n * Express.js\n * jQuery\n\n# Features\n\n * If a cache directory is specified templates will be compiled and cached\n * Ugilfy will be run on compiled templates\n * Proper HTTP caching will occur of templates\n\n# Usage\n\nNodeJS\n\n```javascript\n    var cjade = require('cjade')\n    ...\n    // templates - where to find the template files\n    // c_templates - where to cache compiled templates to\n    app.use(cjade(\"templates\",\"c_templates\"))\n```\n\nBrowser\n\n```javascript\n    <script src=\"jquery.js\">\n    <script src=\"/cjade/cjade.js\">\n\n    ..\n\n\t\t/**\n\t\t\tBasic utilty function to load the specified client side template\n\t\t*/\n    cjade(\"test.jade.js\",function(err,template){\n      $(\"#output\").append(template({ a:1, b:2 }))\n    });\n\t\t\n\n\t\t/**\n\t\t\tcjade.defaults can be used to set default values for the options specified below\n\t\t\t\n\t\t\tThere is no need to specify any defaults by default :P cjade will use it's own busy image, functions, etc \n\t\t*/\n\t\tcjade.defaults({\n\t\t\tbusyImage:\"/images/busy.gif\"\n\t\t});\n\n\t\t/**\n\t\t\tcjade.load is a utility function which:\n\t\t\t\t- provides a busy image functionality to be displayed while the template is loaded and business logic is executed\n\t\t\t\t- provides default error handling\n\n\t\t\t@param {string} selector\n\t\t\t\tjQuery selector\n\t\t\t@param {string} template to load\n\t\t\t\tthis template will be loaded and eventually rendered into the specified selector\n\t\t\t@param {object} options \n\t\t\t\toptional arguments\n\t\t\t\t@param {string} busyImage\t\n\t\t\t\t\tan image to be loaded while waiting for the utility function to finish\n\t\t\t\t@param {function} render(element,templateFunc,err,templateData)\n\t\t\t\t\tthis function is called when the render function defined below is called to populate the templateData using the templateFunc into the specified jQuery element\n\t\t\t\t@param {function} busy(element,options)\n\t\t\t\t\tthis function is called with the specified element prior to fetching the template and executing business logic\n\t\t\t\t@param {function} error(element,options,err)\n\t\t\t\t\tthis function is called when an error occurs\n\t\t\t@param {function} onComplete(err,next)\n\t\t\t\tthis function should contain business logic and is called after the template is loaded\n\t\t\t\t@param {string} err\n\t\t\t\t\tan error message\n\t\t\t\t@param {object} next\n\t\t\t\t\tan object which can be used to either render the template or specify an error\n\t\t\t\t\t@param {function} render(templateData)\n\t\t\t\t\t\tcalling this function will render the template into the specified jQuery selector utilizing the templateData\n\t\t\t\t\t@param {function} error(err) \n\t\t\t\t\t\tcalling this function will call the error function specified in the options\n\t\t*/\n\t\tcjade.load(\"#userView\",\"userView.jade.js\", function(err,next){\n\t\t\tif(!err){\n\t\t\t\tUserService.load({ id: user.id},function(err,user){\n\t\t\t\t\tif(err){\n\t\t\t\t\t\tnext.error(err);\n\t\t\t\t\t} else next.render(user);\n\t\t\t\t});\t\n\t\t\t} else {\n\t\t\t\treturn next.error(err);\n\t\t\t}\n\t\t});\n\t\n\t\t\n```\n\nSee examples/test.js for more examples\n\n## License \n\n(The MIT License)\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "Readme.md",
  "_id": "cjade@0.1.9",
  "description": "A simple request handler for express which compiles jade templates and makes them avilable for client side use.",
  "dist": {
    "shasum": "47726de1277216f04e31df4108ff9034794a5f6e"
  },
  "_from": "cjade"
}
